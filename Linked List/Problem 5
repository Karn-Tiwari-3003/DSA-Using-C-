/*
Inserting an element in between the elements in an array requires you to shift the elements to the left but in Linked list it 
is just about modifying few links. Let's practice inserting a node in an array, but there is a rule : 
You are given a sorted linked list and you have to insert a node in the list in a sorted manner. 
*/

#include <bits/stdc++.h>
using namespace std;

class Node{
  public:
  int data;
  Node* next;
};

void Insert(Node** head, int num){
    Node* last = *head;
    Node* new_node = new Node();
    new_node->data = num;
    new_node->next = NULL;
    if(last != NULL){
        Node* first = last;
        Node* second = last->next;
        if(second != NULL){
            if(first->data > num){
                new_node->next = last;
                *head = new_node;
            }
            else{
                while(first != NULL && second != NULL){
                    if(second->data >= num){
                        break;
                    }
                    else{
                        first = first->next;
                        second = second->next;
                    }
                }
                if(second != NULL){
                    new_node->next = second;
                    first->next = new_node;
                }
                else{
                    first->next = new_node;
                }
            }
        }
        else{
            if(first-> data <= num){
                last->next = new_node;
            }
            else{
                new_node->next = last;
                *head = new_node;
            }
        }
    }
    else{
        *head = new_node;
        return;
    }
}

void print(Node** head){
    Node* temp = *head;
    if(temp != NULL){
        while(temp != NULL){
            cout << temp->data << " ";
            temp = temp->next;
        }
    }
    cout << endl;
}

void append(Node** head_ref, int new_data){
    Node* new_node = new Node();
    new_node->data = new_data;
    new_node->next = NULL;
    if(*head_ref == NULL){
        *head_ref = new_node;
        return;
    }
    Node* last = new Node();
    last = *head_ref;
    while(last->next != NULL){
        last = last->next;
    }
    last->next = new_node;
    return;
}

int main()
{
  //write your code here
  int t;
  cin >> t;
  while(t--){
    int n;
    cin >> n;
    Node* head = NULL;
    while(n--){
      int x;
      cin >> x;
      append(&head, x);
    }
    int data;
    cin >> data;
    Insert(&head, data);
    print(&head);
  }
  return 0;
}
