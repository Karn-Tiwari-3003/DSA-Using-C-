/*
You are given a sorted list which may or may not contain duplicate elements. Your task is to remove the duplicacy from the list. 
So basically if two 4's are present in the list then you have to modify the list such that only one 4 should be there. 
*/

#include <bits/stdc++.h>
using namespace std;

class Node{
  public:
  int data;
  Node* next;
};

void printFront(Node** head){
    Node* last = *head;
    if(last != NULL && last->next != NULL){
        Node* first = last;
        Node* second = last->next;
        while(first != NULL && second != NULL){
            if(first->data == second->data){
                first->next = second->next;
                second = second->next;
            }
            else{
                first = first->next;
                second = second->next;
            }
        }
    }
}

void print(Node** head){
    Node* temp = *head;
    if(temp != NULL){
        while(temp != NULL){
            cout << temp->data << " ";
            temp = temp->next;
        }
    }
    cout << endl;
}

void append(Node** head_ref, int new_data){
    Node* new_node = new Node();
    new_node->data = new_data;
    new_node->next = NULL;
    if(*head_ref == NULL){
        *head_ref = new_node;
        return;
    }
    Node* last = new Node();
    last = *head_ref;
    while(last->next != NULL){
        last = last->next;
    }
    last->next = new_node;
    return;
}

int main()
{
  //write your code here
  int t;
  cin >> t;
  while(t--){
    int n;
    cin >> n;
    Node* head = NULL;
    while(n--){
      int x;
      cin >> x;
      append(&head, x);
    }
    printFront(&head);
    print(&head);
  }
  return 0;
}
